//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RechargeViewExtension.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RechargeViewExtension.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * @author qiao / https://github.com/qiao
        /// * @author mrdoob / http://mrdoob.com
        /// * @author alteredq / http://alteredqualia.com/
        /// * @author WestLangley / http://github.com/WestLangley
        /// * @author erich666 / http://erichaines.com
        /// * @author mrflix / http://felixniklas.de
        /// * 
        /// * released under MIT License (MIT)
        /// */
        ////*global THREE, console */
        ///
        ///// This set of controls performs orbiting, dollying (zooming), and panning. It maintains
        ///// the &quot;up&quot; direction as +Y, unlike the TrackballControls. Touch  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string assets_js_OrbitControls_js {
            get {
                return ResourceManager.GetString("assets_js_OrbitControls_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // threejs.org/license
        ///(function(l,xa){&quot;object&quot;===typeof exports&amp;&amp;&quot;undefined&quot;!==typeof module?xa(exports):&quot;function&quot;===typeof define&amp;&amp;define.amd?define([&quot;exports&quot;],xa):xa(l.THREE={})})(this,function(l){function xa(){}function D(a,b){this.x=a||0;this.y=b||0}function H(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];0&lt;arguments.length&amp;&amp;console.error(&quot;THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.&quot;)}function ha(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string assets_js_three_min_js {
            get {
                return ResourceManager.GetString("assets_js_three_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///	&lt;head&gt;
        ///		&lt;meta charset=&quot;utf-8&quot;&gt;
        ///		&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0&quot;&gt;
        ///		&lt;style&gt;
        ///			body {
        ///				color: #cccccc;
        ///				font-family:Monospace;
        ///				font-size:13px;
        ///				text-align:center;
        ///
        ///				background-color: rgba(225,225,225,0);
        ///				margin: 0px;
        ///				overflow: hidden;
        ///			}
        ///
        ///			#info {
        ///				position: absolute;
        ///				top: 0px; width: 100%;
        ///				padding: 5px;
        ///			}
        ///
        ///			a {
        ///
        ///				color: #0080ff [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string index_html {
            get {
                return ResourceManager.GetString("index_html", resourceCulture);
            }
        }
    }
}
